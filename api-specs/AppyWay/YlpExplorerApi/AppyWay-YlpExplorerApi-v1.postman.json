{
  "item": [
    {
      "id": "0cfb0564-50de-475d-9ffb-585904f990fe",
      "name": "Fetch an authority by ID",
      "request": {
        "name": "Fetch an authority by ID",
        "description": {
          "content": "Returns a specific authority by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchAuthorityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "8810bfb4-7385-4a2a-a11c-38a937278033",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"string\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"string\",\n  \"name\": \"string\",\n  \"eTag\": \"string\",\n  \"notes\": [\n   {\n    \"message\": \"string\"\n   }\n  ],\n  \"paymentProviders\": [\n   {\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"cardPaymentsExternalUrl\": \"string\",\n    \"paymentsTelephone\": \"string\",\n    \"paymentsAppDeepLinks\": {}\n   }\n  ],\n  \"entityType\": 1,\n  \"countryId\": \"string\",\n  \"geometry\": {\n   \"type\": \"string\",\n   \"crs\": {\n    \"type\": \"string\",\n    \"properties\": {\n     \"name\": \"string\"\n    }\n   },\n   \"geometries\": [\n    {\n     \"type\": \"string\",\n     \"crs\": {\n      \"type\": \"string\",\n      \"properties\": {\n       \"name\": \"string\"\n      }\n     }\n    }\n   ]\n  },\n  \"hasFreeParkingOutsideZone\": true\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "26fd79b0-3e46-4824-915e-33e00445094a",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"string\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "6f7b625a-dda6-487a-a17a-475bdaa44b65",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"string\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "90314720-6648-402d-982d-0a872d2cd1ed",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"string\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"string\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "5be34cad-127f-400d-9896-f7c8870b9e4d",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchAuthorityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"string\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "2bd16f57-9220-4e97-960d-4f35b207bc95",
      "name": "Fetches entities by their IDs",
      "request": {
        "name": "Fetches entities by their IDs",
        "description": {
          "content": "Retrieve a bulk list of entities of different types by their IDs",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEntitiesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "27c69cdf-9440-48af-bc74-d308ee76332d",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"string\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": 1,\n        \"geometryTypes\": [\n            1\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"parkingEntities\": [\n   {\n    \"entityId\": \"string\",\n    \"entityType\": 1,\n    \"name\": \"string\",\n    \"eTag\": \"string\",\n    \"address\": {\n     \"street\": \"string\",\n     \"city\": \"string\",\n     \"country\": \"string\",\n     \"postcode\": \"string\"\n    },\n    \"locationCode\": \"string\",\n    \"totalCapacity\": 0,\n    \"zoneId\": \"string\",\n    \"authorityId\": \"string\",\n    \"features\": {\n     \"type\": \"string\",\n     \"features\": [\n      {\n       \"type\": \"string\",\n       \"id\": \"string\",\n       \"geometry\": {\n        \"type\": \"string\",\n        \"crs\": {\n         \"type\": \"string\",\n         \"properties\": {\n          \"name\": \"string\"\n         }\n        },\n        \"geometries\": [\n         {\n          \"type\": \"string\",\n          \"crs\": {\n           \"type\": \"string\",\n           \"properties\": {\n            \"name\": \"string\"\n           }\n          }\n         }\n        ]\n       },\n       \"properties\": {\n        \"basemap\": 1\n       }\n      }\n     ],\n     \"properties\": {}\n    },\n    \"paymentMethodIds\": [\n     0\n    ],\n    \"operator\": {\n     \"id\": \"string\",\n     \"name\": \"string\",\n     \"cardPaymentsExternalUrl\": \"string\",\n     \"paymentsTelephone\": \"string\",\n     \"paymentsAppDeepLinks\": {},\n     \"telephone\": \"string\",\n     \"website\": \"string\"\n    },\n    \"onStreetParkingTypeIds\": [\n     1\n    ],\n    \"facilityTypeIds\": [\n     0\n    ],\n    \"venueId\": \"string\"\n   }\n  ],\n  \"zones\": [\n   {\n    \"entityId\": \"string\",\n    \"name\": \"string\",\n    \"eTag\": \"string\",\n    \"geometry\": {\n     \"type\": \"string\",\n     \"crs\": {\n      \"type\": \"string\",\n      \"properties\": {\n       \"name\": \"string\"\n      }\n     },\n     \"geometries\": [\n      {\n       \"type\": \"string\",\n       \"crs\": {\n        \"type\": \"string\",\n        \"properties\": {\n         \"name\": \"string\"\n        }\n       }\n      }\n     ]\n    },\n    \"notes\": [\n     {\n      \"message\": \"string\"\n     }\n    ],\n    \"authorityId\": \"string\",\n    \"zoneType\": 1,\n    \"venueId\": \"string\",\n    \"entityType\": 1\n   }\n  ],\n  \"authorities\": [\n   {\n    \"entityId\": \"string\",\n    \"name\": \"string\",\n    \"eTag\": \"string\",\n    \"notes\": [\n     {\n      \"message\": \"string\"\n     }\n    ],\n    \"paymentProviders\": [\n     {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"cardPaymentsExternalUrl\": \"string\",\n      \"paymentsTelephone\": \"string\",\n      \"paymentsAppDeepLinks\": {}\n     }\n    ],\n    \"entityType\": 1,\n    \"countryId\": \"string\",\n    \"geometry\": {\n     \"type\": \"string\",\n     \"crs\": {\n      \"type\": \"string\",\n      \"properties\": {\n       \"name\": \"string\"\n      }\n     },\n     \"geometries\": [\n      {\n       \"type\": \"string\",\n       \"crs\": {\n        \"type\": \"string\",\n        \"properties\": {\n         \"name\": \"string\"\n        }\n       }\n      }\n     ]\n    },\n    \"hasFreeParkingOutsideZone\": true\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b2978ef6-9803-4cab-8d5b-90f6921c77ed",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"string\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": 1,\n        \"geometryTypes\": [\n            1\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"string\",\n \"errors\": [\n  {\n   \"property\": \"string\",\n   \"code\": \"string\",\n   \"message\": \"string\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "c7c205aa-2809-44c5-b583-96d3305d5cb2",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"string\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": 1,\n        \"geometryTypes\": [\n            1\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "306f17c4-fa3b-413a-8dc9-f9d1de886587",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"string\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": 1,\n        \"geometryTypes\": [\n            1\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c512ca5c-0bdc-4afd-9d90-6b5504185615",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEntitiesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"string\"\n    ],\n    \"geometryPreference\": {\n        \"basemap\": 1,\n        \"geometryTypes\": [\n            1\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "84005853-6c80-4b01-a9ba-37260dd66e51",
      "name": "Fetch event dates by id",
      "request": {
        "name": "Fetch event dates by id",
        "description": {
          "content": "Searches for event dates with the supplied entity ID.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchEventDatesById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\",\n    \"startDate\": \"<string>\",\n    \"endDate\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "408e38b0-ec79-4b83-b453-ef5b57e97de1",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEventDatesById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"string\",\n    \"startDate\": \"2020-01-20\",\n    \"endDate\": \"2020-01-20\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"string\",\n  \"entityType\": 1,\n  \"entityETag\": \"string\",\n  \"timeZoneId\": \"string\",\n  \"eventDates\": [\n   \"2020-01-20\"\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "21d9d8d9-a688-4ecd-afde-cc3c6628d074",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEventDatesById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"string\",\n    \"startDate\": \"2020-01-20\",\n    \"endDate\": \"2020-01-20\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "7e371db1-8e7e-4d5c-a471-5698b72460e0",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEventDatesById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"string\",\n    \"startDate\": \"2020-01-20\",\n    \"endDate\": \"2020-01-20\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d649a412-2591-4657-824a-ed8dce4799c5",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEventDatesById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"string\",\n    \"startDate\": \"2020-01-20\",\n    \"endDate\": \"2020-01-20\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"string\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3f1b7af0-1653-44bf-9291-e609df41d38d",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchEventDatesById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"string\",\n    \"startDate\": \"2020-01-20\",\n    \"endDate\": \"2020-01-20\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "81403206-a302-4a24-8422-c72e0e66ae11",
      "name": "Fetch operating hours by id",
      "request": {
        "name": "Fetch operating hours by id",
        "description": {
          "content": "Searches for operating hours with the supplied entity ID.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchOperatingHoursById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"<string>\",\n    \"startDate\": \"<string>\",\n    \"endDate\": \"<string>\",\n    \"dates\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"includeNotApplicableOperatingHours\": \"<boolean>\",\n    \"includeApplicableOperatingHoursDetail\": \"<boolean>\",\n    \"includeClosedPeriods\": \"<boolean>\"\n}"
        }
      },
      "response": [
        {
          "id": "c22f8dd2-c5d0-4fe7-86f8-8ff5bb84c2ed",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"string\",\n    \"includeNotApplicableOperatingHours\": true,\n    \"dates\": [\n        \"2020-01-20\"\n    ],\n    \"includeClosedPeriods\": true,\n    \"includeApplicableOperatingHoursDetail\": true,\n    \"date\": \"2020-01-20\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"endDate\": \"2020-01-20\",\n    \"startDate\": \"2020-01-20\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"string\",\n  \"entityType\": 1,\n  \"entityETag\": \"string\",\n  \"timeZoneId\": \"string\",\n  \"operatingHours\": [\n   {\n    \"paymentMethodIds\": [\n     0\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": 0,\n     \"activityTypeId\": 0,\n     \"fuelTypeId\": 0,\n     \"permits\": [\n      {\n       \"permitTypeId\": 0\n      }\n     ]\n    },\n    \"openPeriods\": [\n     {\n      \"start\": \"2024-09-05\",\n      \"end\": \"2024-09-05\",\n      \"date\": \"2020-01-20\",\n      \"status\": 1\n     }\n    ]\n   }\n  ],\n  \"notApplicableOperatingHours\": [\n   {\n    \"paymentMethodIds\": [\n     0\n    ],\n    \"requirements\": {\n     \"vehicleTypeIds\": [\n      0\n     ],\n     \"activityTypeIds\": [\n      0\n     ],\n     \"fuelTypeIds\": [\n      0\n     ],\n     \"permits\": [\n      {\n       \"permitTypeId\": 0\n      }\n     ]\n    },\n    \"openPeriods\": [\n     {\n      \"start\": \"2024-09-05\",\n      \"end\": \"2024-09-05\",\n      \"date\": \"2020-01-20\",\n      \"status\": 1\n     }\n    ]\n   }\n  ],\n  \"applicableOperatingHoursDetail\": [\n   {\n    \"paymentMethodIds\": [\n     0\n    ],\n    \"requirements\": {\n     \"vehicleTypeIds\": [\n      0\n     ],\n     \"activityTypeIds\": [\n      0\n     ],\n     \"fuelTypeIds\": [\n      0\n     ],\n     \"permits\": [\n      {\n       \"permitTypeId\": 0\n      }\n     ]\n    },\n    \"openPeriods\": [\n     {\n      \"start\": \"2024-09-05\",\n      \"end\": \"2024-09-05\",\n      \"date\": \"2020-01-20\",\n      \"status\": 1\n     }\n    ]\n   }\n  ],\n  \"closedPeriods\": [\n   {\n    \"start\": \"2020-01-20T00:00:00.0000000+00:00\",\n    \"end\": \"2020-01-20T00:00:00.0000000+00:00\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "dd58ad9f-a4ec-44a5-acd6-1040eb7ee0be",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"string\",\n    \"includeNotApplicableOperatingHours\": true,\n    \"dates\": [\n        \"2020-01-20\"\n    ],\n    \"includeClosedPeriods\": true,\n    \"includeApplicableOperatingHoursDetail\": true,\n    \"date\": \"2020-01-20\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"endDate\": \"2020-01-20\",\n    \"startDate\": \"2020-01-20\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9898643d-b355-4f89-9f80-56dcb50011f3",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"string\",\n    \"includeNotApplicableOperatingHours\": true,\n    \"dates\": [\n        \"2020-01-20\"\n    ],\n    \"includeClosedPeriods\": true,\n    \"includeApplicableOperatingHoursDetail\": true,\n    \"date\": \"2020-01-20\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"endDate\": \"2020-01-20\",\n    \"startDate\": \"2020-01-20\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "20894de0-9dfc-44b1-bb7f-920856f7ca9b",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"string\",\n    \"includeNotApplicableOperatingHours\": true,\n    \"dates\": [\n        \"2020-01-20\"\n    ],\n    \"includeClosedPeriods\": true,\n    \"includeApplicableOperatingHoursDetail\": true,\n    \"date\": \"2020-01-20\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"endDate\": \"2020-01-20\",\n    \"startDate\": \"2020-01-20\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"string\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3879c797-12ad-412d-b884-1ed933231d12",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"string\",\n    \"includeNotApplicableOperatingHours\": true,\n    \"dates\": [\n        \"2020-01-20\"\n    ],\n    \"includeClosedPeriods\": true,\n    \"includeApplicableOperatingHoursDetail\": true,\n    \"date\": \"2020-01-20\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"endDate\": \"2020-01-20\",\n    \"startDate\": \"2020-01-20\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "fea7f1e8-6c1c-42cb-856a-266bdb3e9f83",
      "name": "Fetch operating hours by ids",
      "request": {
        "name": "Fetch operating hours by ids",
        "description": {
          "content": "Searches for operating hours with the supplied entities IDs.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchOperatingHoursByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"date\": \"<string>\",\n    \"startDate\": \"<string>\",\n    \"endDate\": \"<string>\",\n    \"dates\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"includeNotApplicableOperatingHours\": \"<boolean>\",\n    \"includeApplicableOperatingHoursDetail\": \"<boolean>\",\n    \"includeClosedPeriods\": \"<boolean>\"\n}"
        }
      },
      "response": [
        {
          "id": "04f27c66-a6b9-48af-a00e-6eefea8b53da",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"string\"\n    ],\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"date\": \"2020-01-20\",\n    \"startDate\": \"2020-01-20\",\n    \"endDate\": \"2020-01-20\",\n    \"dates\": [\n        \"2020-01-20\"\n    ],\n    \"includeNotApplicableOperatingHours\": true,\n    \"includeApplicableOperatingHoursDetail\": true,\n    \"includeClosedPeriods\": true\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": [\n  {\n   \"entityId\": \"string\",\n   \"entityType\": 1,\n   \"entityETag\": \"string\",\n   \"timeZoneId\": \"string\",\n   \"operatingHours\": [\n    {\n     \"paymentMethodIds\": [\n      0\n     ],\n     \"permittedContext\": {\n      \"vehicleTypeId\": 0,\n      \"activityTypeId\": 0,\n      \"fuelTypeId\": 0,\n      \"permits\": [\n       {\n        \"permitTypeId\": 0\n       }\n      ]\n     },\n     \"openPeriods\": [\n      {\n       \"start\": \"2024-09-05\",\n       \"end\": \"2024-09-05\",\n       \"date\": \"2020-01-20\",\n       \"status\": 1\n      }\n     ]\n    }\n   ],\n   \"notApplicableOperatingHours\": [\n    {\n     \"paymentMethodIds\": [\n      0\n     ],\n     \"requirements\": {\n      \"vehicleTypeIds\": [\n       0\n      ],\n      \"activityTypeIds\": [\n       0\n      ],\n      \"fuelTypeIds\": [\n       0\n      ],\n      \"permits\": [\n       {\n        \"permitTypeId\": 0\n       }\n      ]\n     },\n     \"openPeriods\": [\n      {\n       \"start\": \"2024-09-05\",\n       \"end\": \"2024-09-05\",\n       \"date\": \"2020-01-20\",\n       \"status\": 1\n      }\n     ]\n    }\n   ],\n   \"applicableOperatingHoursDetail\": [\n    {\n     \"paymentMethodIds\": [\n      0\n     ],\n     \"requirements\": {\n      \"vehicleTypeIds\": [\n       0\n      ],\n      \"activityTypeIds\": [\n       0\n      ],\n      \"fuelTypeIds\": [\n       0\n      ],\n      \"permits\": [\n       {\n        \"permitTypeId\": 0\n       }\n      ]\n     },\n     \"openPeriods\": [\n      {\n       \"start\": \"2024-09-05\",\n       \"end\": \"2024-09-05\",\n       \"date\": \"2020-01-20\",\n       \"status\": 1\n      }\n     ]\n    }\n   ],\n   \"closedPeriods\": [\n    {\n     \"start\": \"2020-01-20T00:00:00.0000000+00:00\",\n     \"end\": \"2020-01-20T00:00:00.0000000+00:00\"\n    }\n   ]\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7319e677-6953-437c-ac40-63e01ba0673f",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"string\"\n    ],\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"date\": \"2020-01-20\",\n    \"startDate\": \"2020-01-20\",\n    \"endDate\": \"2020-01-20\",\n    \"dates\": [\n        \"2020-01-20\"\n    ],\n    \"includeNotApplicableOperatingHours\": true,\n    \"includeApplicableOperatingHoursDetail\": true,\n    \"includeClosedPeriods\": true\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d26f6450-e7b4-47a6-b7ea-70322dcb76f7",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"string\"\n    ],\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"date\": \"2020-01-20\",\n    \"startDate\": \"2020-01-20\",\n    \"endDate\": \"2020-01-20\",\n    \"dates\": [\n        \"2020-01-20\"\n    ],\n    \"includeNotApplicableOperatingHours\": true,\n    \"includeApplicableOperatingHoursDetail\": true,\n    \"includeClosedPeriods\": true\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "bbd3d06c-4b4f-4b45-b3b8-2da47179b62e",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchOperatingHoursByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ids\": [\n        \"string\"\n    ],\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"date\": \"2020-01-20\",\n    \"startDate\": \"2020-01-20\",\n    \"endDate\": \"2020-01-20\",\n    \"dates\": [\n        \"2020-01-20\"\n    ],\n    \"includeNotApplicableOperatingHours\": true,\n    \"includeApplicableOperatingHoursDetail\": true,\n    \"includeClosedPeriods\": true\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "1a05d3ac-7d8f-41a0-a4e6-b11e62c3c64f",
      "name": "Fetch a parking Entity by ID",
      "request": {
        "name": "Fetch a parking Entity by ID",
        "description": {
          "content": "Retrieves a parking entity by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingEntityById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "3576a165-8d50-4c5d-8766-7ec34f5cf7ba",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"string\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"string\",\n  \"entityType\": 1,\n  \"name\": \"string\",\n  \"eTag\": \"string\",\n  \"address\": {\n   \"street\": \"string\",\n   \"city\": \"string\",\n   \"country\": \"string\",\n   \"postcode\": \"string\"\n  },\n  \"locationCode\": \"string\",\n  \"totalCapacity\": 0,\n  \"zoneId\": \"string\",\n  \"authorityId\": \"string\",\n  \"features\": {\n   \"type\": \"string\",\n   \"features\": [\n    {\n     \"type\": \"string\",\n     \"id\": \"string\",\n     \"geometry\": {\n      \"type\": \"string\",\n      \"crs\": {\n       \"type\": \"string\",\n       \"properties\": {\n        \"name\": \"string\"\n       }\n      },\n      \"geometries\": [\n       {\n        \"type\": \"string\",\n        \"crs\": {\n         \"type\": \"string\",\n         \"properties\": {\n          \"name\": \"string\"\n         }\n        }\n       }\n      ]\n     },\n     \"properties\": {\n      \"basemap\": 1\n     }\n    }\n   ],\n   \"properties\": {}\n  },\n  \"paymentMethodIds\": [\n   0\n  ],\n  \"operator\": {\n   \"id\": \"string\",\n   \"name\": \"string\",\n   \"cardPaymentsExternalUrl\": \"string\",\n   \"paymentsTelephone\": \"string\",\n   \"paymentsAppDeepLinks\": {},\n   \"telephone\": \"string\",\n   \"website\": \"string\"\n  },\n  \"onStreetParkingTypeIds\": [\n   1\n  ],\n  \"facilityTypeIds\": [\n   0\n  ],\n  \"venueId\": \"string\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "43218026-4b38-40eb-9a96-97936e538df5",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"string\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "e806607d-97e9-409e-85d7-888e3a724499",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"string\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f67ae3a4-5047-4a26-8d81-6451c337053f",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"string\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"string\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "ca52b298-12ab-4b80-a3fb-b53471579a79",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingEntityById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"string\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "23a2b787-c0de-43c0-a643-d9ecf516026e",
      "name": "Fetch a parking quote by id",
      "request": {
        "name": "Fetch a parking quote by id",
        "description": {
          "content": "Searches for a parking result with the supplied ID. Result indicates whether parking is allowed at the location.\nIf parking is allowed for all or part of the requested window,\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuoteById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "fe7e785a-fe86-4f8f-9cc5-dea9ff689074",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"entityId\": \"string\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"duration\": \"3.17:25:30.5000000\",\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"string\",\n  \"entityType\": 1,\n  \"quotes\": [\n   {\n    \"cost\": 0,\n    \"currency\": \"string\",\n    \"minCost\": 0,\n    \"minStayUntil\": \"string\",\n    \"canExtendUntil\": \"string\",\n    \"pricedUntil\": \"string\",\n    \"noReturnUntil\": \"string\",\n    \"freeUntil\": \"string\",\n    \"becomesFreeAt\": \"string\",\n    \"isFreeParking\": true,\n    \"paymentMethodIds\": [\n     0\n    ],\n    \"permittedContext\": {\n     \"vehicleTypeId\": 0,\n     \"activityTypeId\": 0,\n     \"fuelTypeId\": 0,\n     \"permits\": [\n      {\n       \"permitTypeId\": 0\n      }\n     ]\n    },\n    \"rulesApplyUntil\": \"string\",\n    \"surcharge\": {\n     \"value\": 0,\n     \"valueType\": 1,\n     \"criteria\": {\n      \"vehicleOperatorContext\": {\n       \"vehicleTypeId\": 0,\n       \"activityTypeId\": 0,\n       \"fuelTypeId\": 0,\n       \"permits\": [\n        {\n         \"permitTypeId\": 0\n        }\n       ]\n      },\n      \"maxVehicleManufactureYear\": 0\n     }\n    }\n   }\n  ],\n  \"distance\": 0,\n  \"parkingAllowed\": 1,\n  \"entityETag\": \"string\"\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "b8eaac8f-73e2-44c5-bd42-2b4b917c4682",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"entityId\": \"string\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"duration\": \"3.17:25:30.5000000\",\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "989fa30e-96f0-4603-9f1a-da1b5e772101",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"entityId\": \"string\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"duration\": \"3.17:25:30.5000000\",\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0cc30f12-1397-48f3-a94e-d47fa1680a39",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"entityId\": \"string\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"duration\": \"3.17:25:30.5000000\",\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"string\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "ee8aa604-ef24-4706-b05c-92a0710d2afd",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuoteById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"entityId\": \"string\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"duration\": \"3.17:25:30.5000000\",\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "a759896d-74db-4318-8a24-3f8382c62eb4",
      "name": "Fetch parking quotes by ids",
      "request": {
        "name": "Fetch parking quotes by ids",
        "description": {
          "content": "Searches for a parking result with the supplied IDs. Result indicates whether parking is allowed at the location.\nIf parking is allowed for all or part of the requested window,\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchParkingQuotesByIds"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"startTime\": \"<dateTime>\",\n    \"ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"endTime\": \"<dateTime>\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "eaf3f94e-77c7-41f4-9696-a8b904fb354f",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"duration\": \"3.17:25:30.5000000\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"ids\": [\n        \"string\"\n    ],\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"requestedStartTime\": \"string\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"string\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": 0,\n      \"currency\": \"string\",\n      \"minCost\": 0,\n      \"minStayUntil\": \"string\",\n      \"canExtendUntil\": \"string\",\n      \"pricedUntil\": \"string\",\n      \"noReturnUntil\": \"string\",\n      \"freeUntil\": \"string\",\n      \"becomesFreeAt\": \"string\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       0\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": 0,\n       \"activityTypeId\": 0,\n       \"fuelTypeId\": 0,\n       \"permits\": [\n        {\n         \"permitTypeId\": 0\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"string\",\n      \"surcharge\": {\n       \"value\": 0,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": 0,\n         \"activityTypeId\": 0,\n         \"fuelTypeId\": 0,\n         \"permits\": [\n          {\n           \"permitTypeId\": 0\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 0\n       }\n      }\n     }\n    ],\n    \"distance\": 0,\n    \"parkingAllowed\": 1,\n    \"entityETag\": \"string\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "def321bb-80e7-4d5d-9e62-84c05be7a1d1",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"duration\": \"3.17:25:30.5000000\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"ids\": [\n        \"string\"\n    ],\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "69957f64-2eac-4230-acd4-d88ead5c4d1d",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"duration\": \"3.17:25:30.5000000\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"ids\": [\n        \"string\"\n    ],\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "0cbe68eb-6d5c-4e8c-a202-75004cb6e72a",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchParkingQuotesByIds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"duration\": \"3.17:25:30.5000000\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"ids\": [\n        \"string\"\n    ],\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "8fada7c5-5a9d-4f42-8baf-35941141dd05",
      "name": "Fetch payment providers by parking entity ID",
      "request": {
        "name": "Fetch payment providers by parking entity ID",
        "description": {
          "content": "Returns payment providers for the given parking entity ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchPaymentProvidersByParkingEntityId"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"entityId\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "9c88f2e6-0828-46ef-aa7b-6bb57974debb",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"string\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"paymentProviders\": [\n   {\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"cardPaymentsExternalUrl\": \"string\",\n    \"paymentsTelephone\": \"string\",\n    \"paymentsAppDeepLinks\": {}\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "426c0e17-9990-4531-96c8-35cfac0a6478",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"string\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c8cd061d-4777-4b86-bd78-abcc222d903b",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"string\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f1d1e92a-e35e-44c9-963b-0fc05040aadc",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"string\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"string\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9f74e688-494f-4be8-abd0-53f9ab2604b4",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchPaymentProvidersByParkingEntityId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"entityId\": \"string\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "d52495e5-2225-4373-b69b-5ed6e0275bfb",
      "name": "Fetch a zone by ID",
      "request": {
        "name": "Fetch a zone by ID",
        "description": {
          "content": "Returns a specific zone by its ID",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\"\n}"
        }
      },
      "response": [
        {
          "id": "92f1d16e-84da-4334-99f2-bd86e97bb212",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"string\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"string\",\n  \"name\": \"string\",\n  \"eTag\": \"string\",\n  \"geometry\": {\n   \"type\": \"string\",\n   \"crs\": {\n    \"type\": \"string\",\n    \"properties\": {\n     \"name\": \"string\"\n    }\n   },\n   \"geometries\": [\n    {\n     \"type\": \"string\",\n     \"crs\": {\n      \"type\": \"string\",\n      \"properties\": {\n       \"name\": \"string\"\n      }\n     }\n    }\n   ]\n  },\n  \"notes\": [\n   {\n    \"message\": \"string\"\n   }\n  ],\n  \"authorityId\": \"string\",\n  \"zoneType\": 1,\n  \"venueId\": \"string\",\n  \"entityType\": 1\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "dffc8d5a-752c-4900-b16f-942e08cb1d9f",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"string\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "51dc56be-3a7d-46d0-a241-194e99df6940",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"string\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "da54e4f7-9078-4d01-8928-e00b1824d857",
          "name": "Not Found",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"string\"\n}"
            }
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"string\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a6432b77-fd93-49f6-b9d7-f3c97fb79f24",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"string\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "152f94d0-025f-4856-9c83-0d61e9b7993c",
      "name": "Fetch zone default rules by id",
      "request": {
        "name": "Fetch zone default rules by id",
        "description": {
          "content": "Returns default rules for parking entities by zone ID.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "fetchZoneDefaultRulesById"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"includeNotApplicableTimes\": \"<boolean>\"\n}"
        }
      },
      "response": [
        {
          "id": "d6aa86a5-e6f2-48c5-82ee-66d1efe34d3a",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneDefaultRulesById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"id\": \"string\",\n    \"includeNotApplicableTimes\": true,\n    \"onStreetParkingTypeIds\": [\n        1\n    ],\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entityId\": \"string\",\n  \"entityETag\": \"string\",\n  \"zoneType\": 1,\n  \"defaults\": [\n   {\n    \"onStreetParkingTypeId\": 1,\n    \"applicableTimes\": [\n     {\n      \"startTime\": \"string\",\n      \"endTime\": \"string\",\n      \"maxStay\": 0\n     }\n    ],\n    \"notApplicableTimes\": [\n     {\n      \"startTime\": \"string\",\n      \"endTime\": \"string\"\n     }\n    ]\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "ae3667d7-6aa3-416b-924c-b431b983510e",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneDefaultRulesById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"id\": \"string\",\n    \"includeNotApplicableTimes\": true,\n    \"onStreetParkingTypeIds\": [\n        1\n    ],\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"string\",\n \"errors\": [\n  {\n   \"property\": \"string\",\n   \"code\": \"string\",\n   \"message\": \"string\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "3a2f1b05-c309-40fb-9b75-9bb94f33e65e",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneDefaultRulesById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"id\": \"string\",\n    \"includeNotApplicableTimes\": true,\n    \"onStreetParkingTypeIds\": [\n        1\n    ],\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "2975e62a-d1ae-4dc9-9303-c603ec101cb4",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneDefaultRulesById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"id\": \"string\",\n    \"includeNotApplicableTimes\": true,\n    \"onStreetParkingTypeIds\": [\n        1\n    ],\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "9ad742c1-d45d-431a-869e-e67b97a3abd6",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "fetchZoneDefaultRulesById"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"id\": \"string\",\n    \"includeNotApplicableTimes\": true,\n    \"onStreetParkingTypeIds\": [\n        1\n    ],\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "9eee5b28-d03e-44b8-8737-1ecc417f4db5",
      "name": "Find authority ids by viewport",
      "request": {
        "name": "Find authority ids by viewport",
        "description": {
          "content": "Returns the Ids of authorities that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findAuthorityIdsByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"<string>\",\n            \"properties\": {\n                \"name\": \"<string>\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "97fb7ad0-b727-4c3a-996e-8d6b49b317b9",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"authorities\": [\n   {\n    \"entityId\": \"string\",\n    \"countryId\": \"string\",\n    \"entityETag\": \"string\"\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a4a916c7-d09f-4b03-b847-8ce7b88c56d3",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"string\",\n \"errors\": [\n  {\n   \"property\": \"string\",\n   \"code\": \"string\",\n   \"message\": \"string\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "8efdcc11-f470-44a2-88c5-dff365ac5432",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "50bd3ef7-1332-4d9a-8afc-79784d62d9eb",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "41bd4f0a-23ee-4168-91f2-bb806151d16d",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findAuthorityIdsByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "364085f4-3bf3-496d-8763-cf11aee16d6a",
      "name": "Find parking entities by centre and viewport size",
      "request": {
        "name": "Find parking entities by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
        }
      },
      "response": [
        {
          "id": "1f424e23-4eac-440c-8bda-273ce6a55b08",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"viewportSize\": 0,\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        1\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"geometryPreference\": {\n        \"basemap\": 1,\n        \"geometryTypes\": [\n            1\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"entityId\": \"string\",\n     \"entityType\": 1,\n     \"name\": \"string\",\n     \"eTag\": \"string\",\n     \"address\": {\n      \"street\": \"string\",\n      \"city\": \"string\",\n      \"country\": \"string\",\n      \"postcode\": \"string\"\n     },\n     \"locationCode\": \"string\",\n     \"totalCapacity\": 0,\n     \"zoneId\": \"string\",\n     \"authorityId\": \"string\",\n     \"features\": {\n      \"type\": \"string\",\n      \"features\": [\n       {\n        \"type\": \"string\",\n        \"id\": \"string\",\n        \"geometry\": {\n         \"type\": \"string\",\n         \"crs\": {\n          \"type\": \"string\",\n          \"properties\": {\n           \"name\": \"string\"\n          }\n         },\n         \"geometries\": [\n          {\n           \"type\": \"string\",\n           \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n             \"name\": \"string\"\n            }\n           }\n          }\n         ]\n        },\n        \"properties\": {\n         \"basemap\": 1\n        }\n       }\n      ],\n      \"properties\": {}\n     },\n     \"paymentMethodIds\": [\n      0\n     ],\n     \"operator\": {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"cardPaymentsExternalUrl\": \"string\",\n      \"paymentsTelephone\": \"string\",\n      \"paymentsAppDeepLinks\": {},\n      \"telephone\": \"string\",\n      \"website\": \"string\"\n     },\n     \"onStreetParkingTypeIds\": [\n      1\n     ],\n     \"facilityTypeIds\": [\n      0\n     ],\n     \"venueId\": \"string\"\n    },\n    \"distance\": 0\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "322dd89b-ea83-410b-bac5-d3e4197dcf05",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"viewportSize\": 0,\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        1\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"geometryPreference\": {\n        \"basemap\": 1,\n        \"geometryTypes\": [\n            1\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"string\",\n \"errors\": [\n  {\n   \"property\": \"string\",\n   \"code\": \"string\",\n   \"message\": \"string\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "a924491d-6613-4515-aab8-602793d5e4f2",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"viewportSize\": 0,\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        1\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"geometryPreference\": {\n        \"basemap\": 1,\n        \"geometryTypes\": [\n            1\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "c062788e-f05c-435d-accc-365e1aeb522a",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"viewportSize\": 0,\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        1\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"geometryPreference\": {\n        \"basemap\": 1,\n        \"geometryTypes\": [\n            1\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "ce8abc92-1ba9-4a6c-8315-05282dbdbef7",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportCenter\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"viewportSize\": 0,\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        1\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"geometryPreference\": {\n        \"basemap\": 1,\n        \"geometryTypes\": [\n            1\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "898d30db-fd03-4c96-a597-b5491f72ffb5",
      "name": "Find parking entities by viewport",
      "request": {
        "name": "Find parking entities by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\nIt then returns a list of all the parking entities within the bounds of that polygon, along with their distance from the DistanceCalculationLocation if supplied,\nor the viewport centre if not. Entities are ordered by this distance.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingEntitiesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"viewport\": {\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"<string>\",\n            \"properties\": {\n                \"name\": \"<string>\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"geometryPreference\": {\n        \"basemap\": \"<integer>\",\n        \"geometryTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ]\n    }\n}"
        }
      },
      "response": [
        {
          "id": "bb457ec5-451a-4fff-8200-eba92fd4b8ef",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        1\n    ],\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"geometryPreference\": {\n        \"basemap\": 1,\n        \"geometryTypes\": [\n            1\n        ]\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"entities\": [\n   {\n    \"entity\": {\n     \"entityId\": \"string\",\n     \"entityType\": 1,\n     \"name\": \"string\",\n     \"eTag\": \"string\",\n     \"address\": {\n      \"street\": \"string\",\n      \"city\": \"string\",\n      \"country\": \"string\",\n      \"postcode\": \"string\"\n     },\n     \"locationCode\": \"string\",\n     \"totalCapacity\": 0,\n     \"zoneId\": \"string\",\n     \"authorityId\": \"string\",\n     \"features\": {\n      \"type\": \"string\",\n      \"features\": [\n       {\n        \"type\": \"string\",\n        \"id\": \"string\",\n        \"geometry\": {\n         \"type\": \"string\",\n         \"crs\": {\n          \"type\": \"string\",\n          \"properties\": {\n           \"name\": \"string\"\n          }\n         },\n         \"geometries\": [\n          {\n           \"type\": \"string\",\n           \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n             \"name\": \"string\"\n            }\n           }\n          }\n         ]\n        },\n        \"properties\": {\n         \"basemap\": 1\n        }\n       }\n      ],\n      \"properties\": {}\n     },\n     \"paymentMethodIds\": [\n      0\n     ],\n     \"operator\": {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"cardPaymentsExternalUrl\": \"string\",\n      \"paymentsTelephone\": \"string\",\n      \"paymentsAppDeepLinks\": {},\n      \"telephone\": \"string\",\n      \"website\": \"string\"\n     },\n     \"onStreetParkingTypeIds\": [\n      1\n     ],\n     \"facilityTypeIds\": [\n      0\n     ],\n     \"venueId\": \"string\"\n    },\n    \"distance\": 0\n   }\n  ]\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "7e706fcc-f4af-4077-993b-ca680f57fd22",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        1\n    ],\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"geometryPreference\": {\n        \"basemap\": 1,\n        \"geometryTypes\": [\n            1\n        ]\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"string\",\n \"errors\": [\n  {\n   \"property\": \"string\",\n   \"code\": \"string\",\n   \"message\": \"string\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "9aa60490-6e73-4c11-82e6-edeb2bc81af7",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        1\n    ],\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"geometryPreference\": {\n        \"basemap\": 1,\n        \"geometryTypes\": [\n            1\n        ]\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b0d2962b-d791-41a3-9964-26d1e7d0dff2",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        1\n    ],\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"geometryPreference\": {\n        \"basemap\": 1,\n        \"geometryTypes\": [\n            1\n        ]\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "53e2b353-5d28-4c72-b0f4-029c56d1aae6",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingEntitiesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    },\n    \"onStreetParkingTypes\": [\n        1\n    ],\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"geometryPreference\": {\n        \"basemap\": 1,\n        \"geometryTypes\": [\n            1\n        ]\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "d06ef3da-c663-4337-a0d5-e6750bcf7542",
      "name": "Find parking quotes by centre and viewport size",
      "request": {
        "name": "Find parking quotes by centre and viewport size",
        "description": {
          "content": "This query creates a square viewport with the centre at ViewportCentre and side length of ViewportSize.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window,\r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByCentreAndViewportSize"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"startTime\": \"<dateTime>\",\n    \"viewportCenter\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"viewportSize\": \"<integer>\",\n    \"endTime\": \"<dateTime>\",\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "d38f36fb-d6ba-4e61-a3fc-de53a8fbfb9e",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportSize\": 0,\n    \"viewportCenter\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"startTime\": \"string\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ],\n        \"excludePaidParking\": true,\n        \"excludeFreeParking\": true,\n        \"excludeNoParking\": true,\n        \"excludeTruncatedParking\": true,\n        \"excludeCostGreaterThan\": 0\n    },\n    \"duration\": \"3.17:25:30.5000000\",\n    \"endTime\": \"string\",\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    }\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"requestedStartTime\": \"string\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"string\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": 0,\n      \"currency\": \"string\",\n      \"minCost\": 0,\n      \"minStayUntil\": \"string\",\n      \"canExtendUntil\": \"string\",\n      \"pricedUntil\": \"string\",\n      \"noReturnUntil\": \"string\",\n      \"freeUntil\": \"string\",\n      \"becomesFreeAt\": \"string\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       0\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": 0,\n       \"activityTypeId\": 0,\n       \"fuelTypeId\": 0,\n       \"permits\": [\n        {\n         \"permitTypeId\": 0\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"string\",\n      \"surcharge\": {\n       \"value\": 0,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": 0,\n         \"activityTypeId\": 0,\n         \"fuelTypeId\": 0,\n         \"permits\": [\n          {\n           \"permitTypeId\": 0\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 0\n       }\n      }\n     }\n    ],\n    \"distance\": 0,\n    \"parkingAllowed\": 1,\n    \"entityETag\": \"string\"\n   }\n  ],\n  \"generalOnstreetPolicy\": 1\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "fcfd2896-0403-44c1-9e35-4fbc782156c2",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportSize\": 0,\n    \"viewportCenter\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"startTime\": \"string\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ],\n        \"excludePaidParking\": true,\n        \"excludeFreeParking\": true,\n        \"excludeNoParking\": true,\n        \"excludeTruncatedParking\": true,\n        \"excludeCostGreaterThan\": 0\n    },\n    \"duration\": \"3.17:25:30.5000000\",\n    \"endTime\": \"string\",\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    }\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"string\",\n \"errors\": [\n  {\n   \"property\": \"string\",\n   \"code\": \"string\",\n   \"message\": \"string\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "4b88761d-acd6-4903-b1f9-c89d48ea06db",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportSize\": 0,\n    \"viewportCenter\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"startTime\": \"string\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ],\n        \"excludePaidParking\": true,\n        \"excludeFreeParking\": true,\n        \"excludeNoParking\": true,\n        \"excludeTruncatedParking\": true,\n        \"excludeCostGreaterThan\": 0\n    },\n    \"duration\": \"3.17:25:30.5000000\",\n    \"endTime\": \"string\",\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    }\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "2420cd48-6d77-46d9-8394-276edf0fd052",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportSize\": 0,\n    \"viewportCenter\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"startTime\": \"string\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ],\n        \"excludePaidParking\": true,\n        \"excludeFreeParking\": true,\n        \"excludeNoParking\": true,\n        \"excludeTruncatedParking\": true,\n        \"excludeCostGreaterThan\": 0\n    },\n    \"duration\": \"3.17:25:30.5000000\",\n    \"endTime\": \"string\",\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    }\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "d01cd451-c713-40a5-bc8f-2e909c502a89",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByCentreAndViewportSize"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewportSize\": 0,\n    \"viewportCenter\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"startTime\": \"string\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ],\n        \"excludePaidParking\": true,\n        \"excludeFreeParking\": true,\n        \"excludeNoParking\": true,\n        \"excludeTruncatedParking\": true,\n        \"excludeCostGreaterThan\": 0\n    },\n    \"duration\": \"3.17:25:30.5000000\",\n    \"endTime\": \"string\",\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    }\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "c0a6e0ad-f132-4419-9df2-093a1cc92a31",
      "name": "Find parking quotes by viewport",
      "request": {
        "name": "Find parking quotes by viewport",
        "description": {
          "content": "This query creates a custom viewport from the supplied GeoJson polygon.\r\nIt then returns a list of search results for all parking entities within the bounds of that polygon.\r\nResults are ordered by proximity to the DistanceCalculationLocation if supplied, or the viewport centre if not.\r\n            \r\nEach result indicates whether parking is allowed at that location. If parking is allowed for all or part of the requested window,\r\nthe result contains a list of quotes containing information such as price, payment methods, maximum stay and no return policy.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findParkingQuotesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"<string>\",\n            \"properties\": {\n                \"name\": \"<string>\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ]\n    },\n    \"endTime\": \"<dateTime>\",\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": \"<integer>\",\n        \"activityTypeId\": \"<integer>\",\n        \"fuelTypeId\": \"<integer>\",\n        \"permits\": [\n            {\n                \"permitTypeId\": \"<integer>\"\n            },\n            {\n                \"permitTypeId\": \"<integer>\"\n            }\n        ]\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            \"<integer>\",\n            \"<integer>\"\n        ],\n        \"excludePaidParking\": \"<boolean>\",\n        \"excludeFreeParking\": \"<boolean>\",\n        \"excludeNoParking\": \"<boolean>\",\n        \"excludeTruncatedParking\": \"<boolean>\",\n        \"excludeCostGreaterThan\": \"<float>\"\n    }\n}"
        }
      },
      "response": [
        {
          "id": "7552462d-aa53-45ac-a770-c5c7c998de3c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    },\n    \"startTime\": \"string\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ],\n        \"excludePaidParking\": true,\n        \"excludeFreeParking\": true,\n        \"excludeNoParking\": true,\n        \"excludeTruncatedParking\": true,\n        \"excludeCostGreaterThan\": 0\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"duration\": \"3.17:25:30.5000000\",\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"requestedStartTime\": \"string\",\n  \"requestedDuration\": \"3.17:25:30.5000000\",\n  \"parking\": [\n   {\n    \"entityId\": \"string\",\n    \"entityType\": 1,\n    \"quotes\": [\n     {\n      \"cost\": 0,\n      \"currency\": \"string\",\n      \"minCost\": 0,\n      \"minStayUntil\": \"string\",\n      \"canExtendUntil\": \"string\",\n      \"pricedUntil\": \"string\",\n      \"noReturnUntil\": \"string\",\n      \"freeUntil\": \"string\",\n      \"becomesFreeAt\": \"string\",\n      \"isFreeParking\": true,\n      \"paymentMethodIds\": [\n       0\n      ],\n      \"permittedContext\": {\n       \"vehicleTypeId\": 0,\n       \"activityTypeId\": 0,\n       \"fuelTypeId\": 0,\n       \"permits\": [\n        {\n         \"permitTypeId\": 0\n        }\n       ]\n      },\n      \"rulesApplyUntil\": \"string\",\n      \"surcharge\": {\n       \"value\": 0,\n       \"valueType\": 1,\n       \"criteria\": {\n        \"vehicleOperatorContext\": {\n         \"vehicleTypeId\": 0,\n         \"activityTypeId\": 0,\n         \"fuelTypeId\": 0,\n         \"permits\": [\n          {\n           \"permitTypeId\": 0\n          }\n         ]\n        },\n        \"maxVehicleManufactureYear\": 0\n       }\n      }\n     }\n    ],\n    \"distance\": 0,\n    \"parkingAllowed\": 1,\n    \"entityETag\": \"string\"\n   }\n  ],\n  \"generalOnstreetPolicy\": 1\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "ca032835-b926-4ea2-b802-5669b929b735",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    },\n    \"startTime\": \"string\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ],\n        \"excludePaidParking\": true,\n        \"excludeFreeParking\": true,\n        \"excludeNoParking\": true,\n        \"excludeTruncatedParking\": true,\n        \"excludeCostGreaterThan\": 0\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"duration\": \"3.17:25:30.5000000\",\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"string\",\n \"errors\": [\n  {\n   \"property\": \"string\",\n   \"code\": \"string\",\n   \"message\": \"string\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "1d03a9d6-c243-44a0-a9b7-891e6a416cdb",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    },\n    \"startTime\": \"string\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ],\n        \"excludePaidParking\": true,\n        \"excludeFreeParking\": true,\n        \"excludeNoParking\": true,\n        \"excludeTruncatedParking\": true,\n        \"excludeCostGreaterThan\": 0\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"duration\": \"3.17:25:30.5000000\",\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "2e4c10ec-6576-4ff4-817c-4bc5693a6a1e",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    },\n    \"startTime\": \"string\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ],\n        \"excludePaidParking\": true,\n        \"excludeFreeParking\": true,\n        \"excludeNoParking\": true,\n        \"excludeTruncatedParking\": true,\n        \"excludeCostGreaterThan\": 0\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"duration\": \"3.17:25:30.5000000\",\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "506a4a75-16cf-487b-b96c-5311a126ca35",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findParkingQuotesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    },\n    \"startTime\": \"string\",\n    \"vehicleOperatorContext\": {\n        \"vehicleTypeId\": 0,\n        \"activityTypeId\": 0,\n        \"fuelTypeId\": 0,\n        \"permits\": [\n            {\n                \"permitTypeId\": 0\n            }\n        ]\n    },\n    \"filters\": {\n        \"excludeEntityTypes\": [\n            1\n        ],\n        \"excludePaidParking\": true,\n        \"excludeFreeParking\": true,\n        \"excludeNoParking\": true,\n        \"excludeTruncatedParking\": true,\n        \"excludeCostGreaterThan\": 0\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"duration\": \"3.17:25:30.5000000\",\n    \"endTime\": \"string\"\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "98b0df22-52af-4bf3-84ed-d456d52ba1a6",
      "name": "Find zone default rules by viewport",
      "request": {
        "name": "Find zone default rules by viewport",
        "description": {
          "content": "Returns default rules for parking entities for zones that are at least partially within the specified GeoJson viewport.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "findZoneDefaultRulesByViewport"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"startTime\": \"<dateTime>\",\n    \"viewport\": {\n        \"type\": \"<string>\",\n        \"crs\": {\n            \"type\": \"<string>\",\n            \"properties\": {\n                \"name\": \"<string>\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ],\n            [\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ],\n                [\n                    \"<double>\",\n                    \"<double>\"\n                ]\n            ]\n        ]\n    },\n    \"endTime\": \"<dateTime>\",\n    \"onStreetParkingTypeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"distanceCalculationLocation\": {\n        \"lat\": \"<double>\",\n        \"lng\": \"<double>\"\n    },\n    \"includeNotApplicableTimes\": \"<boolean>\"\n}"
        }
      },
      "response": [
        {
          "id": "c455a735-403b-4056-8e08-21ca2ddcb16c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"includeNotApplicableTimes\": true,\n    \"endTime\": \"string\",\n    \"onStreetParkingTypeIds\": [\n        1\n    ]\n}"
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"result\": {\n  \"zones\": [\n   {\n    \"entityId\": \"string\",\n    \"entityETag\": \"string\",\n    \"zoneType\": 1,\n    \"defaults\": [\n     {\n      \"onStreetParkingTypeId\": 1,\n      \"applicableTimes\": [\n       {\n        \"startTime\": \"string\",\n        \"endTime\": \"string\",\n        \"maxStay\": 0\n       }\n      ],\n      \"notApplicableTimes\": [\n       {\n        \"startTime\": \"string\",\n        \"endTime\": \"string\"\n       }\n      ]\n     }\n    ],\n    \"distance\": 0\n   }\n  ],\n  \"zoneContainingLocation\": {\n   \"entityId\": \"string\",\n   \"entityETag\": \"string\",\n   \"zoneType\": 1,\n   \"defaults\": [\n    {\n     \"onStreetParkingTypeId\": 1,\n     \"applicableTimes\": [\n      {\n       \"startTime\": \"string\",\n       \"endTime\": \"string\",\n       \"maxStay\": 0\n      }\n     ],\n     \"notApplicableTimes\": [\n      {\n       \"startTime\": \"string\",\n       \"endTime\": \"string\"\n      }\n     ]\n    }\n   ],\n   \"distance\": 0\n  }\n }\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "dd493a77-ad68-4caa-83fa-5cffa959f8d9",
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"includeNotApplicableTimes\": true,\n    \"endTime\": \"string\",\n    \"onStreetParkingTypeIds\": [\n        1\n    ]\n}"
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n \"success\": true,\n \"message\": \"string\",\n \"errors\": [\n  {\n   \"property\": \"string\",\n   \"code\": \"string\",\n   \"message\": \"string\"\n  }\n ]\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "958c50d0-a339-489d-a4a6-79f51e513a3b",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"includeNotApplicableTimes\": true,\n    \"endTime\": \"string\",\n    \"onStreetParkingTypeIds\": [\n        1\n    ]\n}"
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "33e46255-a16d-4758-837d-6df3e7371c27",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"includeNotApplicableTimes\": true,\n    \"endTime\": \"string\",\n    \"onStreetParkingTypeIds\": [\n        1\n    ]\n}"
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "f3e891f1-7954-496a-86bf-5d11874a4fea",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "findZoneDefaultRulesByViewport"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startTime\": \"string\",\n    \"viewport\": {\n        \"type\": \"string\",\n        \"crs\": {\n            \"type\": \"string\",\n            \"properties\": {\n                \"name\": \"string\"\n            }\n        },\n        \"coordinates\": [\n            [\n                [\n                    0\n                ]\n            ]\n        ]\n    },\n    \"distanceCalculationLocation\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"includeNotApplicableTimes\": true,\n    \"endTime\": \"string\",\n    \"onStreetParkingTypeIds\": [\n        1\n    ]\n}"
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    },
    {
      "id": "a525b883-4310-4844-9dc8-cac046751b86",
      "name": "Ping",
      "request": {
        "name": "Ping",
        "description": {
          "content": "Returns Status (pong) of service",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "ping"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "3c89d6bc-f946-49a2-8e51-127e4f28398c",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "ping"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "2c0bb994-3f31-4952-8801-7f538e3ab4c4",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "ping"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "8554257e-1324-4289-9df0-2ff6e054d998",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "ping"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        },
        {
          "id": "b3d92f6a-d743-4eb7-b199-aa21a5493b28",
          "name": "Too many requests",
          "originalRequest": {
            "url": {
              "path": [
                "ping"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {}
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": [],
          "_postman_previewlanguage": "text"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "baseUrl",
      "type": "string",
      "value": "https://api.appyway.com/v1/explorer"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "type": "string",
        "value": "{{API-KEY-LIVE}}"
      },
      {
        "key": "key",
        "type": "string",
        "value": "API-KEY"
      }
    ]
  },
  "info": {
    "_postman_id": "18708de1-24e2-46e4-b8b8-d3e6b5b9dde0",
    "name": "Explorer (v1.0|LIVE|Public)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}
